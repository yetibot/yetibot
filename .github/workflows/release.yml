name: Release to Clojars and Dockerhub

on:
  push:
    branches:
      - master
    pull_request:
      - master

jobs:

  deploy:

    runs-on: ubuntu-latest
    # container: clojure:lein
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.4

      - name: maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('project.clj') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: timestamp
        # by setting INFERV_TIMESTAMP_MS we will get deterministic versions from
        # `lein pprint :version`
        run: echo "INFERV_TIMESTAMP_MS=`date +%s%3N`" >> $GITHUB_ENV
      - name: version
        run: echo "YB_VERSION=`lein pprint :version | sed 's/\"//g'`" >> $GITHUB_ENV
      - name: docker tag
        run: echo "YB_DOCKER_TAG=yetibot/yetibot:$YB_VERSION" >> $GITHUB_ENV
      - name: verify
        run: env

      # Clojars release and docker build/push can happen in parallel

      # Clojars
      - name: release
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        run: lein with-profile deploy release

      # Docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.YB_DOCKER_TAG }}
            yetibot/yetibot:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache

      - name: Trigger yetibot-helm
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.YETIBOT_GITHUB_TOKEN }}
          repo: yetibot-helm
          owner: yetibot
          event_type: bump
          message: |
            {
              "yb_docker_tag": "${{ env.YB_DOCKER_TAG }}",
              "yb_version": "${{ env.YB_VERSION }}"
            }
